#*****************************************************************************
#  $Id: Makefile.def 1656 2013-11-26 14:03:49Z naohisa.sakamoto@gmail.com $
#*****************************************************************************

#=============================================================================
#  KVS_DIR.
#=============================================================================
ifndef KVS_DIR
  $(error KVS_DIR is not defined.)
endif


#=============================================================================
#  Suffix rule.
#=============================================================================
.SUFFIXES:


#=============================================================================
#  Phony target.
#=============================================================================
.PHONY: all build lib clean distclean rebuild install uninstall reinstall


#=============================================================================
#  Command macro.
#=============================================================================
ifndef KVS_CPP
  KVS_CPP := g++
endif

ifndef KVS_CC
  KVS_CC := gcc
endif

ifndef KVS_FC
  KVS_FC := gfortran
endif

ifndef KVS_LD
  KVS_LD := $(KVS_CPP)
endif


SHELL  := /bin/bash
CCACHE := $(shell $(SHELL) -c "(type -p ccache; type -p ccache-swig) | head -1")
CPP    := $(CCACHE) $(KVS_CPP)
CC     := $(CCACHE) $(KVS_CC)
FC     := $(CCACHE) $(KVS_FC)
LD     := $(KVS_LD)
AR     := ar -ru
RANLIB := ranlib
MAKE   := make
QMAKE  := qmake

MKDIR := @mkdir -pv
RM    := @rm -fv
RMDIR := @rm -Rfv

INSTALL     := @install -v -m 644
INSTALL_EXE := @install -v -m 755


#=============================================================================
#  all.
#=============================================================================
all: build


#=============================================================================
#  rebuild.
#=============================================================================
rebuild: clean build


#=============================================================================
#  Makefile.
#=============================================================================
MAKEFILE := Makefile


#=============================================================================
#  KVS library.
#=============================================================================
LIB_KVS_CORE := libkvsCore.a

LIB_KVS_SUPPORT_CAVE      := libkvsSupportCAVE.a
LIB_KVS_SUPPORT_CUDA      := libkvsSupportCUDA.a
LIB_KVS_SUPPORT_GLUT      := libkvsSupportGLUT.a
LIB_KVS_SUPPORT_OPENCV    := libkvsSupportOpenCV.a
LIB_KVS_SUPPORT_QT        := libkvsSupportQt.a
LIB_KVS_SUPPORT_PYTHON    := libkvsSupportPython.a
LIB_KVS_SUPPORT_EGL       := libkvsSupportEGL.a
LIB_KVS_SUPPORT_OSMESA    := libkvsSupportOSMesa.a


#=============================================================================
#  Solution.
#=============================================================================
ifdef DEBUG
  SOLUTION := Debug
else
  SOLUTION := Release
endif


#=============================================================================
#  Output directory.
#=============================================================================
OUTDIR := $(SOLUTION)


#=============================================================================
#  GL_INCLUDE_PATH, GL_LIBRARY_PATH, GL_LINK_LIBRARY
#=============================================================================
GL_INCLUDE_PATH :=
GL_LIBRARY_PATH :=
GL_LINK_LIBRARY :=
ifeq "$(KVS_ENABLE_OPENGL)" "1"
  #
  # Mac OS X
  #
  ifeq "$(shell uname -s)" "Darwin"
    ifeq "$(KVS_SUPPORT_OSMESA)" "1"
      ifdef KVS_OSMESA_DIR
        GL_INCLUDE_PATH += -I$(KVS_OSMESA_DIR)/include
        GL_LIBRARY_PATH += -L$(KVS_OSMESA_DIR)/lib
      else
        ifdef KVS_OSMESA_INCLUDE_PATH
          GL_INCLUDE_PATH += -I$(KVS_OSMESA_INCLUDE_PATH)
        endif
        ifdef KVS_OSMESA_LIBRARY_PATH
          GL_LIBRARY_PATH += -L$(KVS_OSMESA_LIBRARY_PATH)
        endif
      endif
      ifdef KVS_OSMESA_LINK_LIBRARY
        GL_LINK_LIBRARY += $(KVS_OSMESA_LINK_LIBRARY)
      else
        GL_LINK_LIBRARY += -lOSMesa
      endif
    else
      ifdef KVS_GL_DIR
        GL_INCLUDE_PATH += -I$(KVS_GL_DIR)/include
        GL_LIBRARY_PATH += -L$(KVS_GL_DIR)/lib
      else
        ifdef KVS_GL_INCLUDE_PATH
          GL_INCLUDE_PATH += -I$(KVS_GL_INCLUDE_PATH)
        endif
        ifdef KVS_GL_LIBRARY_PATH
          GL_LIBRARY_PATH += -L$(KVS_GL_LIBRARY_PATH)
        endif
      endif
      ifdef KVS_GL_LINK_LIBRARY
        GL_LINK_LIBRARY += $(KVS_GL_LINK_LIBRARY) -framework Foundation
      else
        GL_LINK_LIBRARY += -framework OpenGL -framework Foundation
      endif
    endif
  endif
  #
  # Linux
  #
  ifeq "$(shell uname -s)" "Linux"
    ifeq "$(KVS_SUPPORT_OSMESA)" "1"
      ifdef KVS_OSMESA_DIR
        GL_INCLUDE_PATH += -I$(KVS_OSMESA_DIR)/include
        GL_LIBRARY_PATH += -L$(KVS_OSMESA_DIR)/lib
      else
        ifdef KVS_OSMESA_INCLUDE_PATH
          GL_INCLUDE_PATH += -I$(KVS_OSMESA_INCLUDE_PATH)
        endif
        ifdef KVS_OSMESA_LIBRARY_PATH
          GL_LIBRARY_PATH += -L$(KVS_OSMESA_LIBRARY_PATH)
        endif
      endif
      ifdef KVS_OSMESA_LINK_LIBRARY
        GL_LINK_LIBRARY += $(KVS_OSMESA_LINK_LIBRARY)
      else
        GL_LINK_LIBRARY += -lOSMesa
      endif
    else
      ifdef KVS_GL_DIR
        GL_INCLUDE_PATH += -I$(KVS_GL_DIR)/include
        GL_LIBRARY_PATH += -L$(KVS_GL_DIR)/lib
      else
        ifdef KVS_GL_INCLUDE_PATH
          GL_INCLUDE_PATH += -I$(KVS_GL_INCLUDE_PATH)
        endif
        ifdef KVS_GL_LIBRARY_PATH
          GL_LIBRARY_PATH += -L$(KVS_GL_LIBRARY_PATH)
        endif
      endif
      ifeq "$(KVS_ENABLE_GLU)" "1"
        ifdef KVS_GLU_LINK_LIBRARY
          GL_LINK_LIBRARY += $(KVS_GLU_LINK_LIBRARY)
        else
          GL_LINK_LIBRARY += -lGLU
        endif
      endif
      ifdef KVS_GL_LINK_LIBRARY
        GL_LINK_LIBRARY += $(KVS_GL_LINK_LIBRARY) -lm -lpthread
      else
        GL_LINK_LIBRARY += -lGL -lm -lpthread
      endif
    endif
  endif
  #
  # Cygwin
  #
  ifeq "$(findstring CYGWIN,$(shell uname -s))" "CYGWIN"
    ifeq "$(KVS_ENABLE_GLU)" "1"
      GL_LINK_LIBRARY += -lGLU
    endif
    GL_LINK_LIBRARY += -lGL -lm
  endif
endif


#=============================================================================
#  GLEW_INCLUDE_PATH, GLEW_LIBRARY_PATH, GLEW_LINK_LIBRARY
#=============================================================================
GLEW_INCLUDE_PATH :=
GLEW_LIBRARY_PATH :=
GLEW_LINK_LIBRARY :=
ifeq "$(KVS_ENABLE_OPENGL)" "1"
  ifeq  "$(KVS_ENABLE_GLEW)" "1"
    ifdef KVS_GLEW_DIR
      GLEW_INCLUDE_PATH += -I$(KVS_GLEW_DIR)/include
      GLEW_LIBRARY_PATH += -L$(KVS_GLEW_DIR)/lib
    else
      ifdef KVS_GLEW_INCLUDE_PATH
        GLEW_INCLUDE_PATH += -I$(KVS_GLEW_INCLUDE_PATH)
      endif
      ifdef KVS_GLEW_LIBRARY_PATH
        GLEW_LIBRARY_PATH += -L$(KVS_GLEW_LIBRARY_PATH)
      endif
    endif
    ifdef KVS_GLEW_LINK_LIBRARY
      GLEW_LINK_LIBRARY += $(KVS_GLEW_LINK_LIBRARY)
    else
      GLEW_LINK_LIBRARY += -lGLEW
    endif
  endif
endif


#=============================================================================
#  OPENMP_INCLUDE_PATH, OPENMP_LIBRARY_PATH, OPENMP_LINK_LIBRARY
#=============================================================================
OPENMP_INCLUDE_PATH :=
OPENMP_LIBRARY_PATH :=
OPENMP_LINK_LIBRARY :=
ifeq "$(KVS_ENABLE_OPENMP)" "1"
  ifdef KVS_OPENMP_DIR
    OPENMP_INCLUDE_PATH += -I$(KVS_OPENMP_DIR)/include
    OPENMP_LIBRARY_PATH += -L$(KVS_OPENMP_DIR)/lib
  else
    ifdef KVS_OPENMP_INCLUDE_PATH
      OPENMP_INCLUDE_PATH += -I$(KVS_OPENMP_INCLUDE_PATH)
    endif
    ifdef KVS_OPENMP_LIBRARY_PATH
      OPENMP_LIBRARY_PATH += -L$(KVS_OPENMP_LIBRARY_PATH)
    endif
  endif
  ifdef KVS_OPENMP_LINK_LIBRARY
    OPENMP_LINK_LIBRARY += $(KVS_OPENMP_LINK_LIBRARY)
  else
    # For Fujitsu C++ compiler (FCCpx/mpiFCCpx)
    ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),FCCpx mpiFCCpx))
      OPENMP_LINK_LIBRARY +=
    # For Intel C++ compiler (icpc/mpiicpc)
    else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),icpc mpiicpc))
      OPENMP_LINK_LIBRARY += -liomp
    # For g++
    else
      OPENMP_LINK_LIBRARY += -lgomp
    endif
  endif
endif


#=============================================================================
#  GLUT_INCLUDE_PATH, GLUT_LIBRARY_PATH, GLUT_LINK_LIBRARY
#=============================================================================
ifeq "$(KVS_SUPPORT_GLUT)" "1"
  GLUT_INCLUDE_PATH :=
  GLUT_LIBRARY_PATH :=
  GLUT_LINK_LIBRARY :=
  ifdef KVS_GLUT_DIR
    GLUT_INCLUDE_PATH += -I$(KVS_GLUT_DIR)/include
    GLUT_LIBRARY_PATH += -L$(KVS_GLUT_DIR)/lib
  else
    ifdef KVS_GLUT_INCLUDE_PATH
      GLUT_INCLUDE_PATH += -I$(KVS_GLUT_INCLUDE_PATH)
    endif
    ifdef KVS_GLUT_LIBRARY_PATH
      GLUT_LIBRARY_PATH += -L$(KVS_GLUT_LIBRARY_PATH)
    endif
  endif
  # Mac OS X
  ifeq "$(shell uname -s)" "Darwin"
    ifdef KVS_GLUT_LINK_LIBRARY
      GLUT_LINK_LIBRARY += $(KVS_GLUT_LINK_LIBRARY)
    else
      GLUT_LINK_LIBRARY += -framework GLUT
    endif
  endif
  # Linux
  ifeq "$(shell uname -s)" "Linux"
    ifdef KVS_GLUT_LINK_LIBRARY
      GLUT_LINK_LIBRARY += $(KVS_GLUT_LINK_LIBRARY)
    else
      GLUT_LINK_LIBRARY += -lglut
    endif
  endif
  # Cygwin
  ifeq "$(findstring CYGWIN,$(shell uname -s))" "CYGWIN"
    ifdef KVS_GLUT_LINK_LIBRARY
      GLUT_LINK_LIBRARY += $(KVS_GLUT_LINK_LIBRARY)
    else
      GLUT_LINK_LIBRARY += -lglut
    endif
  endif
endif


#=============================================================================
#  CUDA_INCLUDE_PATH, CUDA_LIBRARY_PATH, CUDA_LINK_LIBRARY
#=============================================================================
ifeq "$(KVS_SUPPORT_CUDA)" "1"
  CUDA_INCLUDE_PATH :=
  CUDA_LIBRARY_PATH :=
  CUDA_LINK_LIBRARY := -lcuda -lcudart
  ifdef KVS_CUDA_DIR
    CUDA_INCLUDE_PATH += -I$(KVS_CUDA_DIR)/include
    ifeq "$(shell uname -m)" "x86_64"
      ifeq "$(shell uname -s)" "Darwin"
        CUDA_LIBRARY_PATH += -L$(KVS_CUDA_DIR)/lib
        CUDA_LINK_LIBRARY += -F/Library/Frameworks -framework CUDA
      else
        CUDA_LIBRARY_PATH += -L$(KVS_CUDA_DIR)/lib64
      endif
    else
      CUDA_LIBRARY_PATH += -L$(KVS_CUDA_DIR)/lib
    endif
  endif
  ifdef KVS_CUDA_SDK_DIR
    CUDA_INCLUDE_PATH += -I$(KVS_CUDA_SDK_DIR)/common/inc
    CUDA_LIBRARY_PATH += -L$(KVS_CUDA_SDK_DIR)/lib
    CUDA_LINK_LIBRARY += -lcutil
  endif
  NVCC := nvcc
  NVCCFLAGS := --host-compilation C++
endif


#=============================================================================
#  CAVE_INCLUDE_PATH, CAVE_LIBRARY_PATH, CAVE_LINK_LIBRARY
#=============================================================================
ifeq "$(KVS_SUPPORT_CAVE)" "1"
  CAVE_INCLUDE_PATH :=
  CAVE_LIBRARY_PATH :=
  CAVE_LINK_LIBRARY := -lcave_ogl_mt
  ifdef KVS_CAVE_DIR
    CAVE_INCLUDE_PATH += -I$(KVS_CAVE_DIR)/include
    CAVE_LIBRARY_PATH += -L$(KVS_CAVE_DIR)/lib32
  endif
endif


#=============================================================================
#  OPENCV_INCLUDE_PATH, OPENCV_LIBRARY_PATH, OPENCV_LINK_LIBRARY
#=============================================================================
ifeq "$(KVS_SUPPORT_OPENCV)" "1"
  ifeq "$(findstring opencv4,$(shell pkg-config --list-all))" "opencv4"
    OPENCV_INCLUDE_PATH := `pkg-config --cflags opencv4` -std=c++11 -DKVS_OPENCV4
    OPENCV_LIBRARY_PATH := `pkg-config --libs-only-L opencv4`
    OPENCV_LINK_LIBRARY := `pkg-config --libs opencv4`
  else
    OPENCV_INCLUDE_PATH := `pkg-config --cflags opencv`
    OPENCV_LIBRARY_PATH := `pkg-config --libs-only-L opencv`
    OPENCV_LINK_LIBRARY := `pkg-config --libs opencv`
  endif
  ifdef KVS_OPENCV_DIR
    OPENCV_INCLUDE_PATH := -I$(KVS_OPENCV_DIR)/include
    OPENCV_LIBRARY_PATH := -L$(KVS_OPENCV_DIR)/lib
  endif
endif


#=============================================================================
#  PYTHON_INCLUDE_PATH, PYTHON_LIBRARY_PATH
#  NUMPY_INCLUDE_PATH, NUMPY_LIBRARY_PATH
#=============================================================================
ifeq "$(KVS_SUPPORT_PYTHON)" "1"
  PYTHON_INCLUDE_PATH := $(shell python-config --includes)
  PYTHON_LIBRARY_PATH := $(shell python-config --ldflags)
  PYTHON_LINK_LIBRARY := $(shell python-config --libs)
  ifdef KVS_PYTHON_DIR
    PYTHON_INCLUDE_PATH := -I$(KVS_PYTHON_DIR)/include
    PYTHON_LIBRARY_PATH := -L$(KVS_PYTHON_DIR)/lib
  endif
  NUMPY_INCLUDE_PATH := -I$(shell python -c "import numpy; print numpy.get_include()")
  NUMPY_LIBRARY_PATH :=
  ifdef KVS_NUMPY_DIR
    NUMPY_INCLUDE_PATH := -I$(KVS_NUMPY_DIR)/include
    NUMPY_LIBRARY_PATH := -L$(KVS_NUMPY_DIR)/lib
  endif
endif


#=============================================================================
#  EGL_INCLUDE_PATH, EGL_LIBRARY_PATH, EGL_LINK_LIBRARY
#=============================================================================
ifeq "$(KVS_SUPPORT_EGL)" "1"
  EGL_INCLUDE_PATH :=
  EGL_LIBRARY_PATH :=
  EGL_LINK_LIBRARY :=
  ifdef KVS_EGL_DIR
    EGL_INCLUDE_PATH += -I$(KVS_EGL_DIR)/include
    EGL_LIBRARY_PATH += -L$(KVS_EGL_DIR)/lib
  else
    ifdef KVS_EGL_INCLUDE_PATH
      EGL_INCLUDE_PATH += -I$(KVS_EGL_INCLUDE_PATH)
    endif
    ifdef KVS_EGL_LIBRARY_PATH
      EGL_LIBRARY_PATH += -L$(KVS_EGL_LIBRARY_PATH)
    endif
  endif
  ifdef KVS_EGL_LINK_LIBRARY
    EGL_LINK_LIBRARY += $(KVS_EGL_LINK_LIBRARY)
  else
    EGL_LINK_LIBRARY := -lEGL
  endif
endif


#=============================================================================
#  Compiler option.
#=============================================================================
CPPFLAGS :=

# For Fujitsu C++ compiler (FCCpx/mpiFCCpx)
ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),FCCpx mpiFCCpx))
  CPPFLAGS += -std=c++11
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For Intel C++ compiler (icpc/mpiicpc)
else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),icpc mpiicpc))
  CPPFLAGS += -std=c++11
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For Clang compiler (clang++)
else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),clang++))
  CPPFLAGS += -std=c++11
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For g++
else
  CPPFLAGS += -std=c++11
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -ggdb3
  else
    CPPFLAGS += -O3
  endif
  ifeq "$(shell uname -s)" "Linux"
    CPPFLAGS += -Wno-unused-result
  endif
endif

# OpenMP
ifeq "$(KVS_ENABLE_OPENMP)" "1"
  # For Fujitsu C++ compiler (FCCpx/mpiFCCpx)
  ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),FCCpx mpiFCCpx))
    CPPFLAGS += -Kopenmp
  # For Intel C++ compiler (icpc mpiicpc)
  else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),icpc mpiicpc))
    CPPFLAGS += -openmp
  # For g++
  else
    CPPFLAGS += -fopenmp
  endif
endif


#=============================================================================
#  Definition.
#=============================================================================
DEFINITIONS :=

ifdef DEBUG
  DEFINITIONS += -D_DEBUG -DKVS_ENABLE_DEBUG
else
  DEFINITIONS += -DNDEBUG
endif

ifdef MEM_DEBUG
  DEFINITIONS += -DKVS_ENABLE_MEM_DEBUG
endif

ifeq "$(KVS_ENABLE_OPENGL)" "1"
  DEFINITIONS += -DKVS_ENABLE_OPENGL
endif

ifeq "$(KVS_ENABLE_GLU)" "1"
  DEFINITIONS += -DKVS_ENABLE_GLU
endif

ifeq "$(KVS_ENABLE_GLEW)" "1"
  DEFINITIONS += -DKVS_ENABLE_GLEW
endif

#ifeq "$(KVS_ENABLE_OSMESA)" "1"
#  DEFINITIONS += -DKVS_ENABLE_OSMESA
#endif

ifeq "$(KVS_ENABLE_OPENMP)" "1"
  DEFINITIONS += -DKVS_ENABLE_OPENMP
endif

ifeq "$(KVS_ENABLE_DEPRECATED)" "1"
  DEFINITIONS += -DKVS_ENABLE_DEPRECATED
endif

# NOTE: The GLEW header files must be included before including the OpenGL
# header files. Therefore 'GLEW_INCLUDE_PATH' adds to 'DEFINITIONS' here.
DEFINITIONS += $(GLEW_INCLUDE_PATH)

ifeq "$(KVS_ENABLE_OPENGL)" "1"
  ifeq "$(KVS_SUPPORT_GLUT)" "1"
    DEFINITIONS += -DKVS_SUPPORT_GLUT
  endif
endif

ifeq "$(KVS_SUPPORT_QT)" "1"
  DEFINITIONS += -DKVS_SUPPORT_QT
endif

ifeq "$(KVS_SUPPORT_OPENCV)" "1"
  DEFINITIONS += -DKVS_SUPPORT_OPENCV
endif

ifeq "$(KVS_SUPPORT_CUDA)" "1"
  DEFINITIONS += -DKVS_SUPPORT_CUDA
endif

ifeq "$(KVS_SUPPORT_PYTHON)" "1"
  DEFINITIONS += -DKVS_SUPPORT_PYTHON
endif

ifeq "$(KVS_SUPPORT_EGL)" "1"
  DEFINITIONS += -DKVS_SUPPORT_EGL
endif

ifeq "$(KVS_SUPPORT_OSMESA)" "1"
  DEFINITIONS += -DKVS_SUPPORT_OSMESA
endif


#=============================================================================
#  Linker option.
#=============================================================================
LDFLAGS :=
